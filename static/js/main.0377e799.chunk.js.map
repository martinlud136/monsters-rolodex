{"version":3,"sources":["components/card/Card.component.jsx","components/card-list/card-list.component.jsx","components/search-box/search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","monster","id","name","email","CardList","monsters","map","SearchBox","placeholder","handleChange","type","onChange","App","state","searchField","fetch","then","res","json","data","setState","monstersfiltered","this","filter","item","toLowerCase","includes","toLocaleLowerCase","e","target","value","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qTAGaA,G,MAAO,SAAAC,GAChB,OACI,sBAAKC,UAAU,iBAAf,UACI,qBAAKC,IAAI,UAAUC,IAAG,+BAA0BH,EAAMI,QAAQC,GAAxC,4BACtB,6BAAKL,EAAMI,QAAQE,OACnB,4BAAIN,EAAMI,QAAQG,aCJjBC,G,MAAW,SAACR,GACrB,OAEI,qBAAKC,UAAU,YAAf,SAA4BD,EAAMS,SAASC,KAAI,SAAAN,GAC3C,OAAQ,cAAC,EAAD,CAAuBA,QAASA,GAArBA,EAAQC,WCL1BM,G,MAAY,SAAC,GAAmC,IAAjCC,EAAgC,EAAhCA,YAAaC,EAAmB,EAAnBA,aACvC,OACE,uBACEZ,UAAU,SACVa,KAAK,SACLF,YAAaA,EACbG,SAAUF,MCuBDG,G,wDA1Bb,aAAc,IAAD,8BACX,gBACKC,MAAQ,CACXR,SAAW,GACXS,YAAa,IAJJ,E,gEAQO,IAAD,OACjBC,MAAM,8CACHC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAG,GAAI,OAAI,EAAKC,SAAS,CAACf,SAAUc,S,+BAGlC,IAAD,OACAE,EAAmBC,KAAKT,MAAMR,SAASkB,QAAO,SAAAC,GAAI,OAAIA,EAAKtB,KAAKuB,cAAcC,SAAS,EAAKb,MAAMC,YAAYa,wBACpH,OACE,sBAAK9B,UAAW,MAAhB,UACE,kDACA,cAAC,EAAD,CAAWW,YAAa,uBAAuBC,aAAe,SAAAmB,GAAC,OAAI,EAAKR,SAAS,CAACN,YAAac,EAAEC,OAAOC,WACxG,cAAC,EAAD,CAAUzB,SAAWgB,W,GArBXU,cCOHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBlB,MAAK,YAAkD,IAA/CmB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.0377e799.chunk.js","sourcesContent":["import React from \"react\"\nimport \"./card.styles.css\"\n\nexport const Card = props =>{\n    return(\n        <div className=\"card-container\">\n            <img alt=\"monster\" src={`https://robohash.org/${props.monster.id}?set=set2&size=180x180`}/>\n            <h2>{props.monster.name}</h2>\n            <p>{props.monster.email}</p>\n        </div>\n    )\n}","import React from \"react\"\nimport {Card} from \"../card/Card.component\"\nimport \"./card-list.styles.css\"\n\nexport const CardList = (props) =>{\n    return(\n        \n        <div className=\"card-list\">{props.monsters.map(monster =>{\n            return (<Card key={monster.id} monster={monster}/>)\n        })}\n        </div>\n    )\n}","import React from 'react';\nimport './search-box.styles.css';\n\nexport const SearchBox = ({ placeholder, handleChange }) => {\n  return (\n    <input\n      className=\"search\"\n      type=\"search\"\n      placeholder={placeholder}\n      onChange={handleChange}\n    />\n  );\n};\n","import React,{Component} from \"react\"\nimport { CardList } from \"./components/card-list/card-list.component\"\nimport {SearchBox} from \"./components/search-box/search-box.component.jsx\"\nimport \"./App.css\"\n\nclass App extends Component {\n  constructor(){\n    super()\n    this.state = {\n      monsters : [],\n      searchField: \"\"\n    }\n  }\n\n  componentDidMount(){\n    fetch(\"https://jsonplaceholder.typicode.com/users\")\n      .then(res => res.json())\n      .then(data => this.setState({monsters: data}))\n  }\n\n  render(){\n    const monstersfiltered = this.state.monsters.filter(item => item.name.toLowerCase().includes(this.state.searchField.toLocaleLowerCase()) )\n    return (\n      <div className= \"App\">\n        <h1>Monsters Rolodex</h1>\n        <SearchBox placeholder= \"busca un mounstruito\" handleChange= {e => this.setState({searchField: e.target.value})}/>\n        <CardList monsters= {monstersfiltered}/>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}